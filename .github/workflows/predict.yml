name: Build Model and Predict (Commit outputs)

on:
  workflow_dispatch:
    inputs:
      week:
        description: "CFB Week number (e.g., 5)"
        required: true
        default: "5"
      ref:
        description: "Git ref to run on (branch/tag). Leave blank to use current."
        required: false
        default: ""

permissions:
  contents: write

jobs:
  build-and-predict:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .

    env:
      PYTHONUNBUFFERED: "1"
      WEEK: ${{ github.event.inputs.week }}
      CFBD_API_KEY: ${{ secrets.CFBD_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref_name }}
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Show cache key for train artifacts
        id: cachekey
        run: |
          set -euo pipefail
          tmpfile=$(mktemp)
          if [ -d data/raw/cfbd ]; then
            find data/raw/cfbd -type f -name '*.csv' -print0 | sort -z | xargs -0 sha256sum >> "$tmpfile" || true
          fi
          if [ -d scripts ]; then
            find scripts -type f -name '*.py' -print0 | sort -z | xargs -0 sha256sum >> "$tmpfile" || true
          fi
          if [ -f requirements.txt ]; then
            sha256sum requirements.txt >> "$tmpfile"
          fi
          key=$(sha256sum "$tmpfile" | cut -c1-16)
          echo "key=$key" >> "$GITHUB_OUTPUT"
          echo "Cache key: $key"

      - name: Restore train cache
        uses: actions/cache@v4
        with:
          path: |
            data/derived/model.joblib
            data/derived/training.parquet
          key: train-${{ steps.cachekey.outputs.key }}

      - name: Train final model
        run: |
          python -m scripts.train_model

      - name: Predict games for week
        env:
          WEEK: ${{ github.event.inputs.week }}
        run: |
          W="${WEEK:-5}"
          echo "Predicting Week $W"
          python -m scripts.predict --week "$W"

      - name: Print debug file
        run: |
          echo "----- DEBUG (docs/data/debug_predict.json) -----"
          if [ -f docs/data/debug_predict.json ]; then
            cat docs/data/debug_predict.json
          else
            echo "debug_predict.json not found"
          fi
          echo "----- END DEBUG -----"

      - name: Commit and push predictions/meta/debug
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A docs/data/predictions.json docs/data/train_meta.json docs/data/debug_predict.json
          git commit -m "chore(predictions): update Week ${WEEK}" || true
          git push origin "${{ github.event.inputs.ref || github.ref_name }}"
