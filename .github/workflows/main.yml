name: Generate Weekly Football Predictions

on:
  workflow_dispatch:
  push:

jobs:
  run-prediction-pipeline:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      PYTHONFAULTHANDLER: "1"
      PYTHONUNBUFFERED: "1"
    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 3. Install Dependencies (pinned)
        run: |
          python -m pip install --upgrade pip
          pip install "pandas==2.2.2" "numpy==1.26.4" "pyarrow==16.1.0" "requests>=2.31.0"
          pip install -r requirements.txt || true
          if [ -f scripts/requirements.txt ]; then pip install -r scripts/requirements.txt || true; fi

      - name: 4. Restore Raw Data from Cache
        id: restore_raw
        uses: actions/cache/restore@v4
        with:
          path: data/raw/cfbd
          key: ${{ runner.os }}-raw-cfbd-data-v2
          restore-keys: |
            ${{ runner.os }}-raw-cfbd-data-

      - name: 5. Guard: Ensure raw data exists
        run: |
          if [ ! -d "data/raw/cfbd" ] || [ -z "$(ls -A data/raw/cfbd || true)" ]; then
            echo "No raw CFBD data found. Run the 'Manual Fetch and Cache Data' workflow first."
            exit 1
          fi

      - name: 6. Build Training Dataset
        run: python -m scripts.build_dataset

      - name: 7. Train Prediction Model
        run: python -m scripts.train_model

      - name: 8. Generate New Predictions
        env:
          CFBD_API_KEY: ${{ secrets.CFBD_API_KEY }}
        run: python -m scripts.predict

      - name: 9. Generate Data Snapshot for Website
        run: python -m scripts.generate_data_snapshot

      - name: 10. Commit and Push Results
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: "ðŸ“Š Update weekly predictions & data snapshot"
          file_pattern: "docs/data/predictions.json docs/data/data_snapshot.json"
          commit_user_name: "GitHub Actions Bot"
          commit_user_email: "github-actions@github.com"
          commit_author: "GitHub Actions Bot <github-actions@github.com>"

      - name: 11. Upload debug artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: debug-artifacts
          path: |
            data/derived/**
            docs/data/**
            **/*.log
          if-no-files-found: ignore
